# This YAML file contains configuration parameters for a variational physics-informed neural network (VarPINN) experimentation.

experimentation:
  output_path: "output/test"  # Path to the output directory where the results will be saved.

geometry:
  mesh_generation_method: "internal"  # Method for generating the mesh. Can be "internal" or "external".
  generate_mesh_plot: True  # Flag indicating whether to generate a plot of the mesh.
  
  # internal mesh generated quadrilateral mesh, depending on the parameters specified below.

  internal_mesh_params:  # Parameters for internal mesh generation method.
    x_min: 0  # Minimum x-coordinate of the domain.
    x_max: 20  # Maximum x-coordinate of the domain.
    y_min: 0  # Minimum y-coordinate of the domain.
    y_max: 5  # Maximum y-coordinate of the domain.
    n_cells_x: 20  # Number of cells in the x-direction.
    n_cells_y: 5  # Number of cells in the y-direction.
    n_boundary_points: 500  # Number of boundary points.
    n_test_points_x: 100  # Number of test points in the x-direction.
    n_test_points_y: 100  # Number of test points in the y-direction.
  
  exact_solution:
    exact_solution_generation: "internal" # whether the exact solution needs to be read from external file.
    exact_solution_file_name: "FEM_RE_100_sol.txt" # External solution file name.
  
  mesh_type: "quadrilateral"  # Type of mesh. Can be "quadrilateral" or other supported types.
  
  external_mesh_params:  # Parameters for external mesh generation method.
    mesh_file_name: "meshes/ldc.mesh"  # Path to the external mesh file (should be a .mesh file).
    boundary_refinement_level: 3  # Level of refinement for the boundary.
    boundary_sampling_method: "lhs"  # Method for sampling the boundary. Can be "uniform" or "lhs".

fe:
  fe_order: 5  # Order of the finite element basis functions.
  fe_type: "jacobi"  # Type of finite element basis functions. Can be "jacobi" or other supported types.
  quad_order: 6  # Order of the quadrature rule.
  quad_type: "gauss-jacobi"  # Type of quadrature rule. Can be "gauss-jacobi" or other supported types.

pde:
  beta: 1  # Parameter for the PDE.

model:
  model_architecture: [2,20,20,20,20,20,20, 3]  # Architecture of the neural network model.
  activation: "tanh"  # Activation function used in the neural network.
  use_attention: False  # Flag indicating whether to use attention mechanism in the model.
  epochs: 10000  # Number of training epochs.
  dtype: "float32"  # Data type used for computations.
  set_memory_growth: False  # Flag indicating whether to set memory growth for GPU.
  
  learning_rate:  # Parameters for learning rate scheduling.
    initial_learning_rate: 0.001  # Initial learning rate.
    use_lr_scheduler: False  # Flag indicating whether to use learning rate scheduler.
    decay_steps: 1000  # Number of steps between each learning rate decay.
    decay_rate: 0.99  # Decay rate for the learning rate.
    staircase: False  # Flag indicating whether to use staircase decay.

logging:
  update_progress_bar: 100  # Number of steps between each update of the progress bar.
  update_console_output: 5000  # Number of steps between each update of the console output.
  update_solution_images: 10000  # Number of steps between each update of the intermediate solution images.

wandb:
  use_wandb: False  # Flag indicating whether to use Weights & Biases for logging.
  project_name: "ICCFD_KTH_PINNs"  # Name of the Weights & Biases project.
  wandb_run_prefix: "FastVPINNs_Ablation_Accuracy_Updated"  # Prefix for the Weights & Biases run.
  entity: "starslab-iisc"  # Weights & Biases entity.

additional:
  run_by: "Thivin"  # Name of the person running the experiment.
  System: "24"  # System identifier.
