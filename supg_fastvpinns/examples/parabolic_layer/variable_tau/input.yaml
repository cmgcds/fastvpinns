# This YAML file contains configuration parameters for a variational physics-informed neural network (VarPINN) experimentation.

experimentation:
  output_path: "output/parabolic_var_tau/1" 

geometry:
  mesh_generation_method: "internal"  # Method for generating the mesh. Can be "internal" or "external".
  generate_mesh_plot: True  # Flag indicating whether to generate a plot of the mesh.
  
  # internal mesh generated quadrilateral mesh, depending on the parameters specified below.

  internal_mesh_params:  # Parameters for internal mesh generation method.
    x_min: 0  # Minimum x-coordinate of the domain.
    x_max: 1  # Maximum x-coordinate of the domain.
    y_min: 0  # Minimum y-coordinate of the domain.
    y_max: 1  # Maximum y-coordinate of the domain.
    n_cells_x: 8  # Number of cells in the x-direction.
    n_cells_y: 8  # Number of cells in the y-direction.
    n_boundary_points: 500  # Number of boundary points.
    n_test_points_x: 100  # Number of test points in the x-direction.
    n_test_points_y: 100  # Number of test points in the y-direction.

  mesh_type: "quadrilateral"  # Type of mesh. Can be "quadrilateral" or other supported types.
  
  external_mesh_params:  # Parameters for external mesh generation method.
    mesh_file_name: "meshes/unitsquare_quad.mesh"  # Path to the external mesh file (should be a .mesh file).
    boundary_refinement_level: 4  # Level of refinement for the boundary.
    boundary_sampling_method: "lhs"  # Method for sampling the boundary. Can be "uniform" or "lhs".

fe:
  fe_order: 6 # Order of the finite element basis functions.
  fe_type: "jacobi"  # Type of finite element basis functions. Can be "jacobi" or other supported types.
  quad_order: 10  # Order of the quadrature rule.
  quad_type: "gauss-legendre"  # Type of quadrature rule. Can be "gauss-jacobi" or other supported types.

pde:
  beta: 10  # Parameter for the PDE.
  lam : 0
  pd_lam: 1
  tau_growth : 1

model:
  model_architecture: [2, 30, 30, 30, 30, 30, 30, 30, 2] # # [2, 20,20,20,20, 1] # Architecture of the neural network model.
  activation: "tanh"  # Activation function used in the neural network.
  use_attention: False  # Flag indicating whether to use attention mechanism in the model.
  epochs: 50000  # Number of training epochs.
  dtype: "float64"  # Data type used for computations.
  set_memory_growth: False  # Flag indicating whether to set memory growth for GPU.
  
  learning_rate:  # Parameters for learning rate scheduling.
    initial_learning_rate: 0.00111111111111  #0.00037037037037037 # 0.00125 #0.00037037037037037035 # Initial learning rate.  #0.00037037037037037035
    use_lr_scheduler: False  # Flag indicating whether to use learning rate scheduler.
    decay_steps: 20000  # Number of steps between each learning rate decay.
    decay_rate: 0.95  # Decay rate for the learning rate.
    staircase: False  # Flag indicating whether to use staircase decay.
  

logging:
  update_progress_bar: 100  # Number of steps between each update of the progress bar.
  update_console_output: 5000  # Number of steps between each update of the console output.
  update_solution_images: 10000  # Number of steps between each update of the intermediate solution images.
  test_error_last_n_epochs: 1000